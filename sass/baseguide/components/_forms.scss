// Generate lists of all inputs
$input-list: assign-inputs($input-selector) !default;
$input-list-hover: assign-inputs($input-selector, hover) !default;
$input-list-focus: assign-inputs($input-selector, focus) !default;
$input-list-active: assign-inputs($input-selector, active) !default;


fieldset {
	min-width: 0;
	padding: 0;
	border: 0;
}

label {
	display: inline-block;
	max-width: 100%;
	padding-bottom: $input-padding-vertical;
}

.label-inline {
	margin-top: 1px;
	padding-top: $input-padding-vertical;
}

.form-group {
	margin-bottom: 1em;
}

.form-inline {
	label {
		vertical-align: middle;
		margin-top: 1px;
		padding-top: $input-padding-vertical;
	}

	#{$input-list},
	.form-group,
	.select,
	.checkbox,
	.radio {
		display: inline-block;
		vertical-align: middle;
		margin-bottom: 0;
		width: auto;
	}

	.checkbox + .checkbox,
	.radio + .radio {
		margin-left: 1em;
	}
}


// input controls
#{$input-list} {
	display: block;
	width: 100%;
	height: $input-height;
	border: 1px solid $input-border-color;
	border-radius: $input-border-radius;
	padding: $input-padding-vertical $input-padding-horizontal;
	background-color: $input-bg;
	color: $input-color;
	transition: $input-transition;
	appearance: none;

	&[disabled] {
		border-color: $input-disabled-border-color;
		background-color: $input-disabled-bg;
		color: $input-disabled-color;
		cursor: not-allowed;
	}
}

#{$input-list-focus} {
	border-color: $input-focus-border-color;
	outline: 0;
}

select {
	overflow-x: hidden;
	appearance: menulist;

	&[multiple],
	&[size] {
		height: auto;
	}
}

textarea {
	height: auto;
	resize: vertical;
}

.checkbox,
.radio {
	line-height: 1.45;
}

input[type="radio"],
input[type="checkbox"] {
	position: absolute;
	margin-top: 0.25em;
	line-height: normal;

	+ label {
		padding: 0;
		padding-left: 20px;
		font-weight: normal;
		cursor: pointer;
	}

	&[disabled] + label {
		color: $input-disabled-color;
		cursor: not-allowed;
	}
}

input[type="file"] {
	display: block;
}


// placeholder
[placeholder].placeholder {
	color: $placeholder-color;
}

[placeholder]::placeholder {
	color: $placeholder-color;
	opacity: 1;
}


// custom form controls
@if $use-custom-forms {
	:not(:checked) input[type="checkbox"],
	:not(:checked) input[type="radio"] {
		opacity: 0;

		+ label {
			position: relative;
			padding-left: 1.4em;
		}

		+ label:before {
			content: ' ';
		}
	}

	input[type="checkbox"],
	input[type="radio"] {
		+ label:before {
			position: absolute;
			top: 0.1875em;
			left: 0;
			width: 1em;
			height: 1em;
			border: 1px solid $input-border-color;
			background-color: $input-bg;
			background-repeat: no-repeat;
			background-position: center center;
		}

		+ label:hover:before {
			border-color: $input-focus-border-color;
		}

		+ label:active:before {
			background-color: darken($input-bg, 10%);
		}

		&[disabled] + label:before {
			border-color: $input-disabled-border-color;
			background-color: $input-disabled-bg;
		}
	}

	input[type="radio"] + label:before {
		border-radius: 1em;
	}

	// use the invisible gradient technique for a css only svg fallback: http://pauginer.com/post/36614680636/invisible-gradient-technique
	input[type="radio"]:checked + label:before {
		/* autoprefixer: off */
		background-image: url($icon-radio-fallback);
		background-image: url($icon-radio), linear-gradient(transparent, transparent);
	}

	input[type="checkbox"]:checked + label:before {
		/* autoprefixer: off */
		background-image: url($icon-checkbox-fallback);
		background-image: url($icon-checkbox), linear-gradient(transparent, transparent);
	}


	.select {
		position: relative;

		select {
			padding-right: 2em;
			padding-right: $input-padding-horizontal \9;
			appearance: none;
		}

		select::-ms-expand {
			display: none;
		}

		select:focus::-ms-value {
			background: transparent;
			color: $input-color;
		}

		&:after {
			/* autoprefixer: off */
			content: ' ';
			pointer-events: none;
			position: absolute;
			z-index: 1;
			top: 0;
			right: $input-padding-horizontal;
			width: 12px;
			height: 100%;
			background-repeat: no-repeat;
			background-position: center center;
			background-image: url($icon-select-fallback);
			background-image: url($icon-select), linear-gradient(transparent, transparent);
			display: none \9;
		}
	}

	// show custom arrow in IE 10+
	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		.select:after {
			display: block;
		}

		.select select {
			padding-right: 2em;
		}
	}

	// hide custom arrow in Firefox < 35
	@-moz-document url-prefix() {
		/* autoprefixer: off */
		@supports not(filter: opacity(1)) {
			.select:after {
				display: none;
			}

			.select select {
				padding-right: $input-padding-horizontal;
			}
		}
	}
}
