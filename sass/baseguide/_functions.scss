@function assign-inputs($inputs, $pseudo: null) {
	$list: ();

	@each $input in $inputs {
		$input: unquote($input);
		$input: if($pseudo, $input + ':' + $pseudo, $input);
		$list: append($list, $input, comma);
	}

	@return $list;
}

@function pow($number, $exp) {
	$return: 1;

	@if $exp > 0 {
		// If the exponent is positive then multiply it
		@for $i from 1 through $exp {
			$return: $return * $number;
		}
	} @else if $exp < 0 {
		// If the number is 0 or negative then divide it
		@for $i from 1 through -$exp {
			$return: $return / $number;
		}
	}

	@return $return;
}

@function modular-scale($number, $base: $type-scale-base) {
	$size: pow($type-scale, $number) * $base;

	@return $size;
}

@function strip-unit($number) {
	@return $number / ($number * 0 + 1);
}

@function to-rem($value, $base: 16px) {
	@if (unit($value) != 'rem') {
		$value: strip-unit($value) / strip-unit($base) * 1rem;
	}

	@if ($value == 0rem) {
		$value: 0;
	}

	@return $value;
}
